// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: key_exchange.proto

#include "key_exchange.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

class ClientHelloDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientHello> _instance;
} _ClientHello_default_instance_;
class ServerKeyExchangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerKeyExchange> _instance;
} _ServerKeyExchange_default_instance_;
class ClientKeyExchangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientKeyExchange> _instance;
} _ClientKeyExchange_default_instance_;
class ServerSessionChangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerSessionChange> _instance;
} _ServerSessionChange_default_instance_;
class ClientSessionChangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientSessionChange> _instance;
} _ClientSessionChange_default_instance_;
static void InitDefaultsClientHello_key_5fexchange_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ClientHello_default_instance_;
    new (ptr) ::ClientHello();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClientHello::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClientHello_key_5fexchange_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClientHello_key_5fexchange_2eproto}, {}};

static void InitDefaultsServerKeyExchange_key_5fexchange_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ServerKeyExchange_default_instance_;
    new (ptr) ::ServerKeyExchange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerKeyExchange::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServerKeyExchange_key_5fexchange_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServerKeyExchange_key_5fexchange_2eproto}, {}};

static void InitDefaultsClientKeyExchange_key_5fexchange_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ClientKeyExchange_default_instance_;
    new (ptr) ::ClientKeyExchange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClientKeyExchange::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClientKeyExchange_key_5fexchange_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClientKeyExchange_key_5fexchange_2eproto}, {}};

static void InitDefaultsServerSessionChange_key_5fexchange_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ServerSessionChange_default_instance_;
    new (ptr) ::ServerSessionChange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerSessionChange::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServerSessionChange_key_5fexchange_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServerSessionChange_key_5fexchange_2eproto}, {}};

static void InitDefaultsClientSessionChange_key_5fexchange_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ClientSessionChange_default_instance_;
    new (ptr) ::ClientSessionChange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClientSessionChange::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClientSessionChange_key_5fexchange_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClientSessionChange_key_5fexchange_2eproto}, {}};

void InitDefaults_key_5fexchange_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_ClientHello_key_5fexchange_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerKeyExchange_key_5fexchange_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientKeyExchange_key_5fexchange_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerSessionChange_key_5fexchange_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientSessionChange_key_5fexchange_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_key_5fexchange_2eproto[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_key_5fexchange_2eproto[2];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_key_5fexchange_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_key_5fexchange_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientHello, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientHello, method_),
  PROTOBUF_FIELD_OFFSET(::ClientHello, user_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerKeyExchange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ServerKeyExchange, method_),
  PROTOBUF_FIELD_OFFSET(::ServerKeyExchange, user_key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientKeyExchange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientKeyExchange, method_),
  PROTOBUF_FIELD_OFFSET(::ClientKeyExchange, user_key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ServerSessionChange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ServerSessionChange, session_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ClientSessionChange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ClientSessionChange, session_type_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ClientHello)},
  { 7, -1, sizeof(::ServerKeyExchange)},
  { 14, -1, sizeof(::ClientKeyExchange)},
  { 21, -1, sizeof(::ServerSessionChange)},
  { 27, -1, sizeof(::ClientSessionChange)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ClientHello_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ServerKeyExchange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ClientKeyExchange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ServerSessionChange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ClientSessionChange_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_key_5fexchange_2eproto = {
  {}, AddDescriptors_key_5fexchange_2eproto, "key_exchange.proto", schemas,
  file_default_instances, TableStruct_key_5fexchange_2eproto::offsets,
  file_level_metadata_key_5fexchange_2eproto, 5, file_level_enum_descriptors_key_5fexchange_2eproto, file_level_service_descriptors_key_5fexchange_2eproto,
};

const char descriptor_table_protodef_key_5fexchange_2eproto[] =
  "\n\022key_exchange.proto\"9\n\013ClientHello\022\027\n\006m"
  "ethod\030\001 \001(\0162\007.Method\022\021\n\tuser_name\030\002 \001(\t\""
  ">\n\021ServerKeyExchange\022\027\n\006method\030\001 \001(\0162\007.M"
  "ethod\022\020\n\010user_key\030\002 \001(\r\">\n\021ClientKeyExch"
  "ange\022\027\n\006method\030\001 \001(\0162\007.Method\022\020\n\010user_ke"
  "y\030\002 \001(\r\"9\n\023ServerSessionChange\022\"\n\014sessio"
  "n_type\030\001 \001(\0162\014.SessionType\"9\n\023ClientSess"
  "ionChange\022\"\n\014session_type\030\001 \001(\0162\014.Sessio"
  "nType*\212\001\n\013SessionType\022\023\n\017SESSION_UNKNOWN"
  "\020\000\022\023\n\017SESSION_COMMAND\020\001\022\031\n\025SESSION_SIGNA"
  "L_STREAM\020\002\022 \n\034SESSION_SIGNAL_FILE_TRANSF"
  "ER\020\003\022\024\n\020SESSIOM_TYPE_ALL\020\007*I\n\006Method\022\022\n\016"
  "METHOD_UNKNOWN\020\000\022\022\n\016METHOD_ADDRESS\020\001\022\027\n\023"
  "METHOD_RANDOW_VALUE\020\002b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_key_5fexchange_2eproto = {
  false, InitDefaults_key_5fexchange_2eproto, 
  descriptor_table_protodef_key_5fexchange_2eproto,
  "key_exchange.proto", &assign_descriptors_table_key_5fexchange_2eproto, 549,
};

void AddDescriptors_key_5fexchange_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_key_5fexchange_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_key_5fexchange_2eproto = []() { AddDescriptors_key_5fexchange_2eproto(); return true; }();
const ::google::protobuf::EnumDescriptor* SessionType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_key_5fexchange_2eproto);
  return file_level_enum_descriptors_key_5fexchange_2eproto[0];
}
bool SessionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Method_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_key_5fexchange_2eproto);
  return file_level_enum_descriptors_key_5fexchange_2eproto[1];
}
bool Method_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ClientHello::InitAsDefaultInstance() {
}
class ClientHello::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientHello::kMethodFieldNumber;
const int ClientHello::kUserNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientHello::ClientHello()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientHello)
}
ClientHello::ClientHello(const ClientHello& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_name().size() > 0) {
    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  method_ = from.method_;
  // @@protoc_insertion_point(copy_constructor:ClientHello)
}

void ClientHello::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ClientHello_key_5fexchange_2eproto.base);
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_ = 0;
}

ClientHello::~ClientHello() {
  // @@protoc_insertion_point(destructor:ClientHello)
  SharedDtor();
}

void ClientHello::SharedDtor() {
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClientHello::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientHello& ClientHello::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ClientHello_key_5fexchange_2eproto.base);
  return *internal_default_instance();
}


void ClientHello::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientHello)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClientHello::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ClientHello*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .Method method = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_method(static_cast<::Method>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string user_name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("ClientHello.user_name");
        object = msg->mutable_user_name();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClientHello::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientHello)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Method method = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_method(static_cast< ::Method >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_name().data(), static_cast<int>(this->user_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ClientHello.user_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientHello)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientHello)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClientHello::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientHello)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Method method = 1;
  if (this->method() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->method(), output);
  }

  // string user_name = 2;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), static_cast<int>(this->user_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClientHello.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ClientHello)
}

::google::protobuf::uint8* ClientHello::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientHello)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Method method = 1;
  if (this->method() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->method(), target);
  }

  // string user_name = 2;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), static_cast<int>(this->user_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ClientHello.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientHello)
  return target;
}

size_t ClientHello::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientHello)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_name = 2;
  if (this->user_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());
  }

  // .Method method = 1;
  if (this->method() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->method());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientHello::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientHello)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientHello* source =
      ::google::protobuf::DynamicCastToGenerated<ClientHello>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientHello)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientHello)
    MergeFrom(*source);
  }
}

void ClientHello::MergeFrom(const ClientHello& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientHello)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_name().size() > 0) {

    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  if (from.method() != 0) {
    set_method(from.method());
  }
}

void ClientHello::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientHello)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientHello::CopyFrom(const ClientHello& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientHello)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientHello::IsInitialized() const {
  return true;
}

void ClientHello::Swap(ClientHello* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientHello::InternalSwap(ClientHello* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  user_name_.Swap(&other->user_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(method_, other->method_);
}

::google::protobuf::Metadata ClientHello::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_key_5fexchange_2eproto);
  return ::file_level_metadata_key_5fexchange_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ServerKeyExchange::InitAsDefaultInstance() {
}
class ServerKeyExchange::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerKeyExchange::kMethodFieldNumber;
const int ServerKeyExchange::kUserKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerKeyExchange::ServerKeyExchange()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerKeyExchange)
}
ServerKeyExchange::ServerKeyExchange(const ServerKeyExchange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&method_, &from.method_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_key_) -
    reinterpret_cast<char*>(&method_)) + sizeof(user_key_));
  // @@protoc_insertion_point(copy_constructor:ServerKeyExchange)
}

void ServerKeyExchange::SharedCtor() {
  ::memset(&method_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_key_) -
      reinterpret_cast<char*>(&method_)) + sizeof(user_key_));
}

ServerKeyExchange::~ServerKeyExchange() {
  // @@protoc_insertion_point(destructor:ServerKeyExchange)
  SharedDtor();
}

void ServerKeyExchange::SharedDtor() {
}

void ServerKeyExchange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerKeyExchange& ServerKeyExchange::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ServerKeyExchange_key_5fexchange_2eproto.base);
  return *internal_default_instance();
}


void ServerKeyExchange::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerKeyExchange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&method_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_key_) -
      reinterpret_cast<char*>(&method_)) + sizeof(user_key_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ServerKeyExchange::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ServerKeyExchange*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .Method method = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_method(static_cast<::Method>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 user_key = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_user_key(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ServerKeyExchange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerKeyExchange)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Method method = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_method(static_cast< ::Method >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 user_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerKeyExchange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerKeyExchange)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ServerKeyExchange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerKeyExchange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Method method = 1;
  if (this->method() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->method(), output);
  }

  // uint32 user_key = 2;
  if (this->user_key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->user_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerKeyExchange)
}

::google::protobuf::uint8* ServerKeyExchange::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerKeyExchange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Method method = 1;
  if (this->method() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->method(), target);
  }

  // uint32 user_key = 2;
  if (this->user_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->user_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerKeyExchange)
  return target;
}

size_t ServerKeyExchange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerKeyExchange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Method method = 1;
  if (this->method() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->method());
  }

  // uint32 user_key = 2;
  if (this->user_key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerKeyExchange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerKeyExchange)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerKeyExchange* source =
      ::google::protobuf::DynamicCastToGenerated<ServerKeyExchange>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerKeyExchange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerKeyExchange)
    MergeFrom(*source);
  }
}

void ServerKeyExchange::MergeFrom(const ServerKeyExchange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerKeyExchange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.method() != 0) {
    set_method(from.method());
  }
  if (from.user_key() != 0) {
    set_user_key(from.user_key());
  }
}

void ServerKeyExchange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerKeyExchange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerKeyExchange::CopyFrom(const ServerKeyExchange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerKeyExchange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerKeyExchange::IsInitialized() const {
  return true;
}

void ServerKeyExchange::Swap(ServerKeyExchange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerKeyExchange::InternalSwap(ServerKeyExchange* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(method_, other->method_);
  swap(user_key_, other->user_key_);
}

::google::protobuf::Metadata ServerKeyExchange::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_key_5fexchange_2eproto);
  return ::file_level_metadata_key_5fexchange_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ClientKeyExchange::InitAsDefaultInstance() {
}
class ClientKeyExchange::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientKeyExchange::kMethodFieldNumber;
const int ClientKeyExchange::kUserKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientKeyExchange::ClientKeyExchange()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientKeyExchange)
}
ClientKeyExchange::ClientKeyExchange(const ClientKeyExchange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&method_, &from.method_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_key_) -
    reinterpret_cast<char*>(&method_)) + sizeof(user_key_));
  // @@protoc_insertion_point(copy_constructor:ClientKeyExchange)
}

void ClientKeyExchange::SharedCtor() {
  ::memset(&method_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_key_) -
      reinterpret_cast<char*>(&method_)) + sizeof(user_key_));
}

ClientKeyExchange::~ClientKeyExchange() {
  // @@protoc_insertion_point(destructor:ClientKeyExchange)
  SharedDtor();
}

void ClientKeyExchange::SharedDtor() {
}

void ClientKeyExchange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientKeyExchange& ClientKeyExchange::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ClientKeyExchange_key_5fexchange_2eproto.base);
  return *internal_default_instance();
}


void ClientKeyExchange::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientKeyExchange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&method_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_key_) -
      reinterpret_cast<char*>(&method_)) + sizeof(user_key_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClientKeyExchange::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ClientKeyExchange*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .Method method = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_method(static_cast<::Method>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 user_key = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_user_key(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClientKeyExchange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientKeyExchange)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Method method = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_method(static_cast< ::Method >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 user_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientKeyExchange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientKeyExchange)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClientKeyExchange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientKeyExchange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Method method = 1;
  if (this->method() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->method(), output);
  }

  // uint32 user_key = 2;
  if (this->user_key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->user_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ClientKeyExchange)
}

::google::protobuf::uint8* ClientKeyExchange::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientKeyExchange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Method method = 1;
  if (this->method() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->method(), target);
  }

  // uint32 user_key = 2;
  if (this->user_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->user_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientKeyExchange)
  return target;
}

size_t ClientKeyExchange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientKeyExchange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Method method = 1;
  if (this->method() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->method());
  }

  // uint32 user_key = 2;
  if (this->user_key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->user_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientKeyExchange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientKeyExchange)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientKeyExchange* source =
      ::google::protobuf::DynamicCastToGenerated<ClientKeyExchange>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientKeyExchange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientKeyExchange)
    MergeFrom(*source);
  }
}

void ClientKeyExchange::MergeFrom(const ClientKeyExchange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientKeyExchange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.method() != 0) {
    set_method(from.method());
  }
  if (from.user_key() != 0) {
    set_user_key(from.user_key());
  }
}

void ClientKeyExchange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientKeyExchange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientKeyExchange::CopyFrom(const ClientKeyExchange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientKeyExchange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientKeyExchange::IsInitialized() const {
  return true;
}

void ClientKeyExchange::Swap(ClientKeyExchange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientKeyExchange::InternalSwap(ClientKeyExchange* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(method_, other->method_);
  swap(user_key_, other->user_key_);
}

::google::protobuf::Metadata ClientKeyExchange::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_key_5fexchange_2eproto);
  return ::file_level_metadata_key_5fexchange_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ServerSessionChange::InitAsDefaultInstance() {
}
class ServerSessionChange::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerSessionChange::kSessionTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerSessionChange::ServerSessionChange()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerSessionChange)
}
ServerSessionChange::ServerSessionChange(const ServerSessionChange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  session_type_ = from.session_type_;
  // @@protoc_insertion_point(copy_constructor:ServerSessionChange)
}

void ServerSessionChange::SharedCtor() {
  session_type_ = 0;
}

ServerSessionChange::~ServerSessionChange() {
  // @@protoc_insertion_point(destructor:ServerSessionChange)
  SharedDtor();
}

void ServerSessionChange::SharedDtor() {
}

void ServerSessionChange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ServerSessionChange& ServerSessionChange::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ServerSessionChange_key_5fexchange_2eproto.base);
  return *internal_default_instance();
}


void ServerSessionChange::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerSessionChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  session_type_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ServerSessionChange::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ServerSessionChange*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .SessionType session_type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_session_type(static_cast<::SessionType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ServerSessionChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerSessionChange)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .SessionType session_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_session_type(static_cast< ::SessionType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerSessionChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerSessionChange)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ServerSessionChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerSessionChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .SessionType session_type = 1;
  if (this->session_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->session_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerSessionChange)
}

::google::protobuf::uint8* ServerSessionChange::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ServerSessionChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .SessionType session_type = 1;
  if (this->session_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->session_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerSessionChange)
  return target;
}

size_t ServerSessionChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerSessionChange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .SessionType session_type = 1;
  if (this->session_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->session_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerSessionChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerSessionChange)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerSessionChange* source =
      ::google::protobuf::DynamicCastToGenerated<ServerSessionChange>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerSessionChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerSessionChange)
    MergeFrom(*source);
  }
}

void ServerSessionChange::MergeFrom(const ServerSessionChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerSessionChange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.session_type() != 0) {
    set_session_type(from.session_type());
  }
}

void ServerSessionChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerSessionChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerSessionChange::CopyFrom(const ServerSessionChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerSessionChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerSessionChange::IsInitialized() const {
  return true;
}

void ServerSessionChange::Swap(ServerSessionChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerSessionChange::InternalSwap(ServerSessionChange* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(session_type_, other->session_type_);
}

::google::protobuf::Metadata ServerSessionChange::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_key_5fexchange_2eproto);
  return ::file_level_metadata_key_5fexchange_2eproto[kIndexInFileMessages];
}


// ===================================================================

void ClientSessionChange::InitAsDefaultInstance() {
}
class ClientSessionChange::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientSessionChange::kSessionTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientSessionChange::ClientSessionChange()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientSessionChange)
}
ClientSessionChange::ClientSessionChange(const ClientSessionChange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  session_type_ = from.session_type_;
  // @@protoc_insertion_point(copy_constructor:ClientSessionChange)
}

void ClientSessionChange::SharedCtor() {
  session_type_ = 0;
}

ClientSessionChange::~ClientSessionChange() {
  // @@protoc_insertion_point(destructor:ClientSessionChange)
  SharedDtor();
}

void ClientSessionChange::SharedDtor() {
}

void ClientSessionChange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientSessionChange& ClientSessionChange::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ClientSessionChange_key_5fexchange_2eproto.base);
  return *internal_default_instance();
}


void ClientSessionChange::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientSessionChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  session_type_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ClientSessionChange::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ClientSessionChange*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .SessionType session_type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_session_type(static_cast<::SessionType>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ClientSessionChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientSessionChange)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .SessionType session_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_session_type(static_cast< ::SessionType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientSessionChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientSessionChange)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ClientSessionChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientSessionChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .SessionType session_type = 1;
  if (this->session_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->session_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ClientSessionChange)
}

::google::protobuf::uint8* ClientSessionChange::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ClientSessionChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .SessionType session_type = 1;
  if (this->session_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->session_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientSessionChange)
  return target;
}

size_t ClientSessionChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientSessionChange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .SessionType session_type = 1;
  if (this->session_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->session_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientSessionChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientSessionChange)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientSessionChange* source =
      ::google::protobuf::DynamicCastToGenerated<ClientSessionChange>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientSessionChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientSessionChange)
    MergeFrom(*source);
  }
}

void ClientSessionChange::MergeFrom(const ClientSessionChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientSessionChange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.session_type() != 0) {
    set_session_type(from.session_type());
  }
}

void ClientSessionChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientSessionChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientSessionChange::CopyFrom(const ClientSessionChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientSessionChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientSessionChange::IsInitialized() const {
  return true;
}

void ClientSessionChange::Swap(ClientSessionChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientSessionChange::InternalSwap(ClientSessionChange* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(session_type_, other->session_type_);
}

::google::protobuf::Metadata ClientSessionChange::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_key_5fexchange_2eproto);
  return ::file_level_metadata_key_5fexchange_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::ClientHello* Arena::CreateMaybeMessage< ::ClientHello >(Arena* arena) {
  return Arena::CreateInternal< ::ClientHello >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerKeyExchange* Arena::CreateMaybeMessage< ::ServerKeyExchange >(Arena* arena) {
  return Arena::CreateInternal< ::ServerKeyExchange >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientKeyExchange* Arena::CreateMaybeMessage< ::ClientKeyExchange >(Arena* arena) {
  return Arena::CreateInternal< ::ClientKeyExchange >(arena);
}
template<> PROTOBUF_NOINLINE ::ServerSessionChange* Arena::CreateMaybeMessage< ::ServerSessionChange >(Arena* arena) {
  return Arena::CreateInternal< ::ServerSessionChange >(arena);
}
template<> PROTOBUF_NOINLINE ::ClientSessionChange* Arena::CreateMaybeMessage< ::ClientSessionChange >(Arena* arena) {
  return Arena::CreateInternal< ::ClientSessionChange >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
