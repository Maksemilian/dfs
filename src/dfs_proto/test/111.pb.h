// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: command.proto

#ifndef PROTOBUF_INCLUDED_command_2eproto
#define PROTOBUF_INCLUDED_command_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_command_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_command_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_command_2eproto();
class Answer;
class AnswerDefaultTypeInternal;
extern AnswerDefaultTypeInternal _Answer_default_instance_;
class Command;
class CommandDefaultTypeInternal;
extern CommandDefaultTypeInternal _Command_default_instance_;
class ConnectRequest;
class ConnectRequestDefaultTypeInternal;
extern ConnectRequestDefaultTypeInternal _ConnectRequest_default_instance_;
class FileRequest;
class FileRequestDefaultTypeInternal;
extern FileRequestDefaultTypeInternal _FileRequest_default_instance_;
class Preselectors;
class PreselectorsDefaultTypeInternal;
extern PreselectorsDefaultTypeInternal _Preselectors_default_instance_;
namespace google {
namespace protobuf {
template<> ::Answer* Arena::CreateMaybeMessage<::Answer>(Arena*);
template<> ::Command* Arena::CreateMaybeMessage<::Command>(Arena*);
template<> ::ConnectRequest* Arena::CreateMaybeMessage<::ConnectRequest>(Arena*);
template<> ::FileRequest* Arena::CreateMaybeMessage<::FileRequest>(Arena*);
template<> ::Preselectors* Arena::CreateMaybeMessage<::Preselectors>(Arena*);
}  // namespace protobuf
}  // namespace google

enum ConnectRequest_Type {
  ConnectRequest_Type_CT_COMMAND = 0,
  ConnectRequest_Type_CT_STREAM = 1,
  ConnectRequest_Type_CT_FILE = 2,
  ConnectRequest_Type_ConnectRequest_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  ConnectRequest_Type_ConnectRequest_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool ConnectRequest_Type_IsValid(int value);
const ConnectRequest_Type ConnectRequest_Type_Type_MIN = ConnectRequest_Type_CT_COMMAND;
const ConnectRequest_Type ConnectRequest_Type_Type_MAX = ConnectRequest_Type_CT_FILE;
const int ConnectRequest_Type_Type_ARRAYSIZE = ConnectRequest_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConnectRequest_Type_descriptor();
inline const ::std::string& ConnectRequest_Type_Name(ConnectRequest_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConnectRequest_Type_descriptor(), value);
}
inline bool ConnectRequest_Type_Parse(
    const ::std::string& name, ConnectRequest_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConnectRequest_Type>(
    ConnectRequest_Type_descriptor(), name, value);
}
enum FileRequest_Type {
  FileRequest_Type_TYPE_LOAD = 0,
  FileRequest_Type_TYPE_REMOVE = 1,
  FileRequest_Type_FileRequest_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  FileRequest_Type_FileRequest_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool FileRequest_Type_IsValid(int value);
const FileRequest_Type FileRequest_Type_Type_MIN = FileRequest_Type_TYPE_LOAD;
const FileRequest_Type FileRequest_Type_Type_MAX = FileRequest_Type_TYPE_REMOVE;
const int FileRequest_Type_Type_ARRAYSIZE = FileRequest_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* FileRequest_Type_descriptor();
inline const ::std::string& FileRequest_Type_Name(FileRequest_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    FileRequest_Type_descriptor(), value);
}
inline bool FileRequest_Type_Parse(
    const ::std::string& name, FileRequest_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FileRequest_Type>(
    FileRequest_Type_descriptor(), name, value);
}
enum CommandType {
  SET_POWER_OFF = 0,
  SET_POWER_ON = 1,
  SET_ATTENUATOR = 2,
  SET_PRESELECTORS = 3,
  SET_PREAMPLIFIER_ENABLED = 4,
  SET_ADC_NOICE_BLANKER_ENABLED = 5,
  SET_ADC_NOICE_BLANKER_THRESHOLD = 6,
  SET_DDC1_FREQUENCY = 7,
  SET_DDC1_TYPE = 8,
  SET_SETTINGS = 9,
  START_DDC1 = 10,
  STOP_DDC1 = 11,
  CommandType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  CommandType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool CommandType_IsValid(int value);
const CommandType CommandType_MIN = SET_POWER_OFF;
const CommandType CommandType_MAX = STOP_DDC1;
const int CommandType_ARRAYSIZE = CommandType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CommandType_descriptor();
inline const ::std::string& CommandType_Name(CommandType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CommandType_descriptor(), value);
}
inline bool CommandType_Parse(
    const ::std::string& name, CommandType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommandType>(
    CommandType_descriptor(), name, value);
}
// ===================================================================

class Preselectors :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Preselectors) */ {
 public:
  Preselectors();
  virtual ~Preselectors();

  Preselectors(const Preselectors& from);

  inline Preselectors& operator=(const Preselectors& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Preselectors(Preselectors&& from) noexcept
    : Preselectors() {
    *this = ::std::move(from);
  }

  inline Preselectors& operator=(Preselectors&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Preselectors& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Preselectors* internal_default_instance() {
    return reinterpret_cast<const Preselectors*>(
               &_Preselectors_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Preselectors* other);
  friend void swap(Preselectors& a, Preselectors& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Preselectors* New() const final {
    return CreateMaybeMessage<Preselectors>(nullptr);
  }

  Preselectors* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Preselectors>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Preselectors& from);
  void MergeFrom(const Preselectors& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Preselectors* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 low_frequency = 1;
  void clear_low_frequency();
  static const int kLowFrequencyFieldNumber = 1;
  ::google::protobuf::uint32 low_frequency() const;
  void set_low_frequency(::google::protobuf::uint32 value);

  // uint32 high_frequency = 2;
  void clear_high_frequency();
  static const int kHighFrequencyFieldNumber = 2;
  ::google::protobuf::uint32 high_frequency() const;
  void set_high_frequency(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Preselectors)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 low_frequency_;
  ::google::protobuf::uint32 high_frequency_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_command_2eproto;
};
// -------------------------------------------------------------------

class Command :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Command) */ {
 public:
  Command();
  virtual ~Command();

  Command(const Command& from);

  inline Command& operator=(const Command& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Command(Command&& from) noexcept
    : Command() {
    *this = ::std::move(from);
  }

  inline Command& operator=(Command&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Command& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Command* internal_default_instance() {
    return reinterpret_cast<const Command*>(
               &_Command_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Command* other);
  friend void swap(Command& a, Command& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Command* New() const final {
    return CreateMaybeMessage<Command>(nullptr);
  }

  Command* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Command>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Command& from);
  void MergeFrom(const Command& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Command* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes adc_noice_blanker_threshold = 6;
  void clear_adc_noice_blanker_threshold();
  static const int kAdcNoiceBlankerThresholdFieldNumber = 6;
  const ::std::string& adc_noice_blanker_threshold() const;
  void set_adc_noice_blanker_threshold(const ::std::string& value);
  #if LANG_CXX11
  void set_adc_noice_blanker_threshold(::std::string&& value);
  #endif
  void set_adc_noice_blanker_threshold(const char* value);
  void set_adc_noice_blanker_threshold(const void* value, size_t size);
  ::std::string* mutable_adc_noice_blanker_threshold();
  ::std::string* release_adc_noice_blanker_threshold();
  void set_allocated_adc_noice_blanker_threshold(::std::string* adc_noice_blanker_threshold);

  // .Preselectors preselectors = 3;
  bool has_preselectors() const;
  void clear_preselectors();
  static const int kPreselectorsFieldNumber = 3;
  const ::Preselectors& preselectors() const;
  ::Preselectors* release_preselectors();
  ::Preselectors* mutable_preselectors();
  void set_allocated_preselectors(::Preselectors* preselectors);

  // .CommandType command_type = 1;
  void clear_command_type();
  static const int kCommandTypeFieldNumber = 1;
  ::CommandType command_type() const;
  void set_command_type(::CommandType value);

  // uint32 attenuator = 2;
  void clear_attenuator();
  static const int kAttenuatorFieldNumber = 2;
  ::google::protobuf::uint32 attenuator() const;
  void set_attenuator(::google::protobuf::uint32 value);

  // bool preamplifier_enebled = 4;
  void clear_preamplifier_enebled();
  static const int kPreamplifierEnebledFieldNumber = 4;
  bool preamplifier_enebled() const;
  void set_preamplifier_enebled(bool value);

  // bool adc_noice_blanker_enebled = 5;
  void clear_adc_noice_blanker_enebled();
  static const int kAdcNoiceBlankerEnebledFieldNumber = 5;
  bool adc_noice_blanker_enebled() const;
  void set_adc_noice_blanker_enebled(bool value);

  // bool start_ddc1 = 9;
  void clear_start_ddc1();
  static const int kStartDdc1FieldNumber = 9;
  bool start_ddc1() const;
  void set_start_ddc1(bool value);

  // uint32 ddc1_frequency = 7;
  void clear_ddc1_frequency();
  static const int kDdc1FrequencyFieldNumber = 7;
  ::google::protobuf::uint32 ddc1_frequency() const;
  void set_ddc1_frequency(::google::protobuf::uint32 value);

  // uint32 ddc1_type = 8;
  void clear_ddc1_type();
  static const int kDdc1TypeFieldNumber = 8;
  ::google::protobuf::uint32 ddc1_type() const;
  void set_ddc1_type(::google::protobuf::uint32 value);

  // uint32 samples_per_buffer = 10;
  void clear_samples_per_buffer();
  static const int kSamplesPerBufferFieldNumber = 10;
  ::google::protobuf::uint32 samples_per_buffer() const;
  void set_samples_per_buffer(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Command)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr adc_noice_blanker_threshold_;
  ::Preselectors* preselectors_;
  int command_type_;
  ::google::protobuf::uint32 attenuator_;
  bool preamplifier_enebled_;
  bool adc_noice_blanker_enebled_;
  bool start_ddc1_;
  ::google::protobuf::uint32 ddc1_frequency_;
  ::google::protobuf::uint32 ddc1_type_;
  ::google::protobuf::uint32 samples_per_buffer_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_command_2eproto;
};
// -------------------------------------------------------------------

class Answer :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Answer) */ {
 public:
  Answer();
  virtual ~Answer();

  Answer(const Answer& from);

  inline Answer& operator=(const Answer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Answer(Answer&& from) noexcept
    : Answer() {
    *this = ::std::move(from);
  }

  inline Answer& operator=(Answer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Answer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Answer* internal_default_instance() {
    return reinterpret_cast<const Answer*>(
               &_Answer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Answer* other);
  friend void swap(Answer& a, Answer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Answer* New() const final {
    return CreateMaybeMessage<Answer>(nullptr);
  }

  Answer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Answer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Answer& from);
  void MergeFrom(const Answer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Answer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .CommandType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::CommandType type() const;
  void set_type(::CommandType value);

  // bool succesed = 2;
  void clear_succesed();
  static const int kSuccesedFieldNumber = 2;
  bool succesed() const;
  void set_succesed(bool value);

  // @@protoc_insertion_point(class_scope:Answer)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  bool succesed_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_command_2eproto;
};
// -------------------------------------------------------------------

class ConnectRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ConnectRequest) */ {
 public:
  ConnectRequest();
  virtual ~ConnectRequest();

  ConnectRequest(const ConnectRequest& from);

  inline ConnectRequest& operator=(const ConnectRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConnectRequest(ConnectRequest&& from) noexcept
    : ConnectRequest() {
    *this = ::std::move(from);
  }

  inline ConnectRequest& operator=(ConnectRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ConnectRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConnectRequest* internal_default_instance() {
    return reinterpret_cast<const ConnectRequest*>(
               &_ConnectRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ConnectRequest* other);
  friend void swap(ConnectRequest& a, ConnectRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConnectRequest* New() const final {
    return CreateMaybeMessage<ConnectRequest>(nullptr);
  }

  ConnectRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ConnectRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ConnectRequest& from);
  void MergeFrom(const ConnectRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConnectRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ConnectRequest_Type Type;
  static const Type CT_COMMAND =
    ConnectRequest_Type_CT_COMMAND;
  static const Type CT_STREAM =
    ConnectRequest_Type_CT_STREAM;
  static const Type CT_FILE =
    ConnectRequest_Type_CT_FILE;
  static inline bool Type_IsValid(int value) {
    return ConnectRequest_Type_IsValid(value);
  }
  static const Type Type_MIN =
    ConnectRequest_Type_Type_MIN;
  static const Type Type_MAX =
    ConnectRequest_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    ConnectRequest_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return ConnectRequest_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return ConnectRequest_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return ConnectRequest_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .ConnectRequest.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::ConnectRequest_Type type() const;
  void set_type(::ConnectRequest_Type value);

  // @@protoc_insertion_point(class_scope:ConnectRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_command_2eproto;
};
// -------------------------------------------------------------------

class FileRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:FileRequest) */ {
 public:
  FileRequest();
  virtual ~FileRequest();

  FileRequest(const FileRequest& from);

  inline FileRequest& operator=(const FileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FileRequest(FileRequest&& from) noexcept
    : FileRequest() {
    *this = ::std::move(from);
  }

  inline FileRequest& operator=(FileRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const FileRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FileRequest* internal_default_instance() {
    return reinterpret_cast<const FileRequest*>(
               &_FileRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(FileRequest* other);
  friend void swap(FileRequest& a, FileRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FileRequest* New() const final {
    return CreateMaybeMessage<FileRequest>(nullptr);
  }

  FileRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FileRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FileRequest& from);
  void MergeFrom(const FileRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef FileRequest_Type Type;
  static const Type TYPE_LOAD =
    FileRequest_Type_TYPE_LOAD;
  static const Type TYPE_REMOVE =
    FileRequest_Type_TYPE_REMOVE;
  static inline bool Type_IsValid(int value) {
    return FileRequest_Type_IsValid(value);
  }
  static const Type Type_MIN =
    FileRequest_Type_Type_MIN;
  static const Type Type_MAX =
    FileRequest_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    FileRequest_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return FileRequest_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return FileRequest_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return FileRequest_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string file_name = 3;
  void clear_file_name();
  static const int kFileNameFieldNumber = 3;
  const ::std::string& file_name() const;
  void set_file_name(const ::std::string& value);
  #if LANG_CXX11
  void set_file_name(::std::string&& value);
  #endif
  void set_file_name(const char* value);
  void set_file_name(const char* value, size_t size);
  ::std::string* mutable_file_name();
  ::std::string* release_file_name();
  void set_allocated_file_name(::std::string* file_name);

  // int64 file_position = 4;
  void clear_file_position();
  static const int kFilePositionFieldNumber = 4;
  ::google::protobuf::int64 file_position() const;
  void set_file_position(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:FileRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_name_;
  ::google::protobuf::int64 file_position_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_command_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Preselectors

// uint32 low_frequency = 1;
inline void Preselectors::clear_low_frequency() {
  low_frequency_ = 0u;
}
inline ::google::protobuf::uint32 Preselectors::low_frequency() const {
  // @@protoc_insertion_point(field_get:Preselectors.low_frequency)
  return low_frequency_;
}
inline void Preselectors::set_low_frequency(::google::protobuf::uint32 value) {
  
  low_frequency_ = value;
  // @@protoc_insertion_point(field_set:Preselectors.low_frequency)
}

// uint32 high_frequency = 2;
inline void Preselectors::clear_high_frequency() {
  high_frequency_ = 0u;
}
inline ::google::protobuf::uint32 Preselectors::high_frequency() const {
  // @@protoc_insertion_point(field_get:Preselectors.high_frequency)
  return high_frequency_;
}
inline void Preselectors::set_high_frequency(::google::protobuf::uint32 value) {
  
  high_frequency_ = value;
  // @@protoc_insertion_point(field_set:Preselectors.high_frequency)
}

// -------------------------------------------------------------------

// Command

// .CommandType command_type = 1;
inline void Command::clear_command_type() {
  command_type_ = 0;
}
inline ::CommandType Command::command_type() const {
  // @@protoc_insertion_point(field_get:Command.command_type)
  return static_cast< ::CommandType >(command_type_);
}
inline void Command::set_command_type(::CommandType value) {
  
  command_type_ = value;
  // @@protoc_insertion_point(field_set:Command.command_type)
}

// uint32 attenuator = 2;
inline void Command::clear_attenuator() {
  attenuator_ = 0u;
}
inline ::google::protobuf::uint32 Command::attenuator() const {
  // @@protoc_insertion_point(field_get:Command.attenuator)
  return attenuator_;
}
inline void Command::set_attenuator(::google::protobuf::uint32 value) {
  
  attenuator_ = value;
  // @@protoc_insertion_point(field_set:Command.attenuator)
}

// .Preselectors preselectors = 3;
inline bool Command::has_preselectors() const {
  return this != internal_default_instance() && preselectors_ != nullptr;
}
inline void Command::clear_preselectors() {
  if (GetArenaNoVirtual() == nullptr && preselectors_ != nullptr) {
    delete preselectors_;
  }
  preselectors_ = nullptr;
}
inline const ::Preselectors& Command::preselectors() const {
  const ::Preselectors* p = preselectors_;
  // @@protoc_insertion_point(field_get:Command.preselectors)
  return p != nullptr ? *p : *reinterpret_cast<const ::Preselectors*>(
      &::_Preselectors_default_instance_);
}
inline ::Preselectors* Command::release_preselectors() {
  // @@protoc_insertion_point(field_release:Command.preselectors)
  
  ::Preselectors* temp = preselectors_;
  preselectors_ = nullptr;
  return temp;
}
inline ::Preselectors* Command::mutable_preselectors() {
  
  if (preselectors_ == nullptr) {
    auto* p = CreateMaybeMessage<::Preselectors>(GetArenaNoVirtual());
    preselectors_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Command.preselectors)
  return preselectors_;
}
inline void Command::set_allocated_preselectors(::Preselectors* preselectors) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete preselectors_;
  }
  if (preselectors) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      preselectors = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, preselectors, submessage_arena);
    }
    
  } else {
    
  }
  preselectors_ = preselectors;
  // @@protoc_insertion_point(field_set_allocated:Command.preselectors)
}

// bool preamplifier_enebled = 4;
inline void Command::clear_preamplifier_enebled() {
  preamplifier_enebled_ = false;
}
inline bool Command::preamplifier_enebled() const {
  // @@protoc_insertion_point(field_get:Command.preamplifier_enebled)
  return preamplifier_enebled_;
}
inline void Command::set_preamplifier_enebled(bool value) {
  
  preamplifier_enebled_ = value;
  // @@protoc_insertion_point(field_set:Command.preamplifier_enebled)
}

// bool adc_noice_blanker_enebled = 5;
inline void Command::clear_adc_noice_blanker_enebled() {
  adc_noice_blanker_enebled_ = false;
}
inline bool Command::adc_noice_blanker_enebled() const {
  // @@protoc_insertion_point(field_get:Command.adc_noice_blanker_enebled)
  return adc_noice_blanker_enebled_;
}
inline void Command::set_adc_noice_blanker_enebled(bool value) {
  
  adc_noice_blanker_enebled_ = value;
  // @@protoc_insertion_point(field_set:Command.adc_noice_blanker_enebled)
}

// bytes adc_noice_blanker_threshold = 6;
inline void Command::clear_adc_noice_blanker_threshold() {
  adc_noice_blanker_threshold_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Command::adc_noice_blanker_threshold() const {
  // @@protoc_insertion_point(field_get:Command.adc_noice_blanker_threshold)
  return adc_noice_blanker_threshold_.GetNoArena();
}
inline void Command::set_adc_noice_blanker_threshold(const ::std::string& value) {
  
  adc_noice_blanker_threshold_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Command.adc_noice_blanker_threshold)
}
#if LANG_CXX11
inline void Command::set_adc_noice_blanker_threshold(::std::string&& value) {
  
  adc_noice_blanker_threshold_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Command.adc_noice_blanker_threshold)
}
#endif
inline void Command::set_adc_noice_blanker_threshold(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  adc_noice_blanker_threshold_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Command.adc_noice_blanker_threshold)
}
inline void Command::set_adc_noice_blanker_threshold(const void* value, size_t size) {
  
  adc_noice_blanker_threshold_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Command.adc_noice_blanker_threshold)
}
inline ::std::string* Command::mutable_adc_noice_blanker_threshold() {
  
  // @@protoc_insertion_point(field_mutable:Command.adc_noice_blanker_threshold)
  return adc_noice_blanker_threshold_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Command::release_adc_noice_blanker_threshold() {
  // @@protoc_insertion_point(field_release:Command.adc_noice_blanker_threshold)
  
  return adc_noice_blanker_threshold_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Command::set_allocated_adc_noice_blanker_threshold(::std::string* adc_noice_blanker_threshold) {
  if (adc_noice_blanker_threshold != nullptr) {
    
  } else {
    
  }
  adc_noice_blanker_threshold_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), adc_noice_blanker_threshold);
  // @@protoc_insertion_point(field_set_allocated:Command.adc_noice_blanker_threshold)
}

// uint32 ddc1_frequency = 7;
inline void Command::clear_ddc1_frequency() {
  ddc1_frequency_ = 0u;
}
inline ::google::protobuf::uint32 Command::ddc1_frequency() const {
  // @@protoc_insertion_point(field_get:Command.ddc1_frequency)
  return ddc1_frequency_;
}
inline void Command::set_ddc1_frequency(::google::protobuf::uint32 value) {
  
  ddc1_frequency_ = value;
  // @@protoc_insertion_point(field_set:Command.ddc1_frequency)
}

// uint32 ddc1_type = 8;
inline void Command::clear_ddc1_type() {
  ddc1_type_ = 0u;
}
inline ::google::protobuf::uint32 Command::ddc1_type() const {
  // @@protoc_insertion_point(field_get:Command.ddc1_type)
  return ddc1_type_;
}
inline void Command::set_ddc1_type(::google::protobuf::uint32 value) {
  
  ddc1_type_ = value;
  // @@protoc_insertion_point(field_set:Command.ddc1_type)
}

// bool start_ddc1 = 9;
inline void Command::clear_start_ddc1() {
  start_ddc1_ = false;
}
inline bool Command::start_ddc1() const {
  // @@protoc_insertion_point(field_get:Command.start_ddc1)
  return start_ddc1_;
}
inline void Command::set_start_ddc1(bool value) {
  
  start_ddc1_ = value;
  // @@protoc_insertion_point(field_set:Command.start_ddc1)
}

// uint32 samples_per_buffer = 10;
inline void Command::clear_samples_per_buffer() {
  samples_per_buffer_ = 0u;
}
inline ::google::protobuf::uint32 Command::samples_per_buffer() const {
  // @@protoc_insertion_point(field_get:Command.samples_per_buffer)
  return samples_per_buffer_;
}
inline void Command::set_samples_per_buffer(::google::protobuf::uint32 value) {
  
  samples_per_buffer_ = value;
  // @@protoc_insertion_point(field_set:Command.samples_per_buffer)
}

// -------------------------------------------------------------------

// Answer

// .CommandType type = 1;
inline void Answer::clear_type() {
  type_ = 0;
}
inline ::CommandType Answer::type() const {
  // @@protoc_insertion_point(field_get:Answer.type)
  return static_cast< ::CommandType >(type_);
}
inline void Answer::set_type(::CommandType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:Answer.type)
}

// bool succesed = 2;
inline void Answer::clear_succesed() {
  succesed_ = false;
}
inline bool Answer::succesed() const {
  // @@protoc_insertion_point(field_get:Answer.succesed)
  return succesed_;
}
inline void Answer::set_succesed(bool value) {
  
  succesed_ = value;
  // @@protoc_insertion_point(field_set:Answer.succesed)
}

// -------------------------------------------------------------------

// ConnectRequest

// .ConnectRequest.Type type = 1;
inline void ConnectRequest::clear_type() {
  type_ = 0;
}
inline ::ConnectRequest_Type ConnectRequest::type() const {
  // @@protoc_insertion_point(field_get:ConnectRequest.type)
  return static_cast< ::ConnectRequest_Type >(type_);
}
inline void ConnectRequest::set_type(::ConnectRequest_Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ConnectRequest.type)
}

// -------------------------------------------------------------------

// FileRequest

// string file_name = 3;
inline void FileRequest::clear_file_name() {
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileRequest::file_name() const {
  // @@protoc_insertion_point(field_get:FileRequest.file_name)
  return file_name_.GetNoArena();
}
inline void FileRequest::set_file_name(const ::std::string& value) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FileRequest.file_name)
}
#if LANG_CXX11
inline void FileRequest::set_file_name(::std::string&& value) {
  
  file_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:FileRequest.file_name)
}
#endif
inline void FileRequest::set_file_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FileRequest.file_name)
}
inline void FileRequest::set_file_name(const char* value, size_t size) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FileRequest.file_name)
}
inline ::std::string* FileRequest::mutable_file_name() {
  
  // @@protoc_insertion_point(field_mutable:FileRequest.file_name)
  return file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileRequest::release_file_name() {
  // @@protoc_insertion_point(field_release:FileRequest.file_name)
  
  return file_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileRequest::set_allocated_file_name(::std::string* file_name) {
  if (file_name != nullptr) {
    
  } else {
    
  }
  file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_name);
  // @@protoc_insertion_point(field_set_allocated:FileRequest.file_name)
}

// int64 file_position = 4;
inline void FileRequest::clear_file_position() {
  file_position_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 FileRequest::file_position() const {
  // @@protoc_insertion_point(field_get:FileRequest.file_position)
  return file_position_;
}
inline void FileRequest::set_file_position(::google::protobuf::int64 value) {
  
  file_position_ = value;
  // @@protoc_insertion_point(field_set:FileRequest.file_position)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ConnectRequest_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ConnectRequest_Type>() {
  return ::ConnectRequest_Type_descriptor();
}
template <> struct is_proto_enum< ::FileRequest_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::FileRequest_Type>() {
  return ::FileRequest_Type_descriptor();
}
template <> struct is_proto_enum< ::CommandType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CommandType>() {
  return ::CommandType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_command_2eproto
